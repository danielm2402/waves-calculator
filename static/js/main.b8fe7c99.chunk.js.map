{"version":3,"sources":["assets/gif-pendulum.gif","components/header/Header.js","pages/landing/Landing.js","pages/platform/animations/SimplePendulumAnimation.jsx","pages/platform/inputs/Form.jsx","pages/platform/checks/Checks.jsx","pages/platform/blackboard/waves/index.jsx","pages/platform/blackboard/Blackboard.jsx","pages/platform/Platform.js","services/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","href","onClick","document","querySelector","scrollIntoView","behavior","rel","target","Landing","size","color","src","gif","alt","BallAnimation","styled","div","props","y","keyframes","time","SimplePendulumAnimation","style","position","height","width","overflow","angle","marginLeft","length","class","mass","Form","overflowY","paddingBottom","Object","values","configInputs","map","item","checked","label","name","value","data","onChange","e","handleInputs","type","Checks","display","flexDirection","alignItems","marginTop","FormLabel","component","FormGroup","FormControlLabel","control","Checkbox","handleChecks","gravity","posInitial","const","handleType","contentsBounds","body","getBoundingClientRect","Index","React","useEffect","functionPlot","xAxis","domain","grid","fn","inputs","emax","response","k","ommega","disableZoom","width1","height1","k_2","er","bi","bt","br","error","console","log","Context","input","Node","coeficienteR","coeficienteT","nodosCampoElectrico","nodosCampoMagnetico","antiNodosCampoElectrico","antinodosCampoMagnetico","paddingTop","id","backgroundColor","paddingLeft","Blackboard","responseWaves","Platform","useState","page","setPage","pageConfig","setPageConfig","setType","velInitial","setConfigInputs","configInputsAmortiguado","setConfigInputsAmortiguado","fuerzaInicial","frecuenciaFuerza","configInputsForzado","setConfigInputsForzado","n","n1","n2","configInputsWaves","setConfigInputsWaves","responseAmortiguado","responseForzado","responseEnergies","setResponseWaves","parOmmega","parN","l","v1","v2","longitudDeOnda","x_1","x_2","push","x_3","x_4","table","waves","ButtonGroup","Button","variant","energies","Math","abs","hasOwnProperty","periodo","theme","createMuiTheme","palette","primary","main","secondary","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.b8fe7c99.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gif-pendulum.46c90860.gif\";","import React from 'react'\nimport './Header.css'\nexport default function Header() {\n    return (\n        <div className=\"container-header\">\n            <div className=\"container-logo\">\n                __Electromagnetic Waves\n            </div>\n            <div className=\"container-navigation\">\n                <a href=\"#/\" onClick={() => document?.querySelector(`.page-platform`)\n                    .scrollIntoView({ behavior: \"smooth\" })}>Start</a>\n            <a rel=\"noopener noreferrer\" href=\"https://github.com/danielm2402/simple-pendulum\" target=\"_blank\">GitHub</a>\n            <a href=\"#/\">Get to know us</a>\n        </div>\n        </div >\n    )\n}\n","import React from 'react'\nimport './Landing.css'\nimport { FaGithub } from \"react-icons/fa\";\nimport gif from '../../assets/gif-pendulum.gif'\nexport default function Landing() {\n    return (\n        <div className=\"page-landing-page\">\n            <div className=\"container-left-landing-page\">\n                <div className=\"container-title\">\n                    Welcome to your Electromagnetic Waves calculator\n                </div>\n                <div className=\"container-resume\">\n                    Ea culpa Lorem nulla proident labore cupidatat commodo reprehenderit veniam.\n                </div>\n                <div className=\"container-help\">\n                    <a rel=\"noopener noreferrer\" href=\"https://github.com/danielm2402/simple-pendulum\" target=\"_blank\" className=\"button-git\">Give me a star <FaGithub size=\"2rem\" color=\"#ffffff\" /></a>\n                </div>\n            </div>\n            <div className=\"container-right-landing-page\">\n                <div className=\"framework-gif\">\n                    <div className=\"container-gif\">\n                        <img src={gif} alt=\"SIMPLE_PENDULUM\" />\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components';\nimport './animation.css'\n\nconst moveVertically = (y) => keyframes`\nfrom {\n    transform: rotate(${y}deg);\n}\nto {\n    transform: rotate(-${y}deg);\n}\n\n`;\n\nconst BallAnimation = styled.div`\n    left: calc(50% - 50px);\n    position: absolute;\n    height: 80%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-between;\n    transform-origin: top center;\n    animation :${props => moveVertically(props.y)} ${props => props.time}s infinite;\n    animation-direction: alternate-reverse;\n    animation-timing-function: linear;\n`;\n//animation: mymove 2s infinite;\nexport default function SimplePendulumAnimation(props) {\n    return (\n        <div style={{ position: 'relative', height: '100%', width: '100%' }}>\n            <div style={{ position: 'absolute', width: '100%', height: '100%', overflow: 'hidden' }} >\n                <BallAnimation y={props.angle} time={props.time}>\n                    <div className=\"pendulum\" >\n                        <h5 style={{ marginLeft: 4 }}>{props.length}m</h5>\n                    </div>\n                    <section class=\"stage\">\n                        <figure class=\"ball\"><span class=\"shadow\">{props.mass}</span></figure>\n                    </section>\n                </BallAnimation>\n            </div>\n            <div style={{ position: 'absolute', width: '100%', height: '100%', overflow: 'hidden' }} >\n                <div className=\"protactor-angular\">\n                    <div className=\"chart chart1\">\n                        <span class=\"char1\">|</span>\n\n                    </div>\n                    <div className=\"chart chart2\">\n                        <span class=\"char1\">|</span>\n                        <span class=\"char1\">80</span>\n                    </div>\n                    <div className=\"chart chart3\">\n                        <span class=\"char1\">|</span>\n                        <span class=\"char1\">70</span>\n                    </div>\n                    <div className=\"chart chart4\">\n                        <span class=\"char1\">|</span>\n                        <span class=\"char1\">60</span>\n                    </div>\n                    <div className=\"chart chart5\">\n                        <span class=\"char1\">|</span>\n                        <span class=\"char1\">50</span>\n                    </div>\n                    <div className=\"chart chart6\">\n                        <span class=\"char1\">|</span>\n                        <span class=\"char1\">40</span>\n                    </div>\n                    <div className=\"chart chart7\">\n                        <span class=\"char1\">|</span>\n                        <span class=\"char1\">30</span>\n                    </div>\n                    <div className=\"chart chart8\">\n                        <span class=\"char1\">|</span>\n                        <span class=\"char1\">20</span>\n                    </div>\n                    <div className=\"chart chart9\">\n                        <span class=\"char1\">|</span>\n                        <span class=\"char1\">10</span>\n                    </div>\n                    <div className=\"chart chart10\">\n                        <span class=\"char1\">|</span>\n                        <span class=\"char1\">0</span>\n                    </div>\n                    <div className=\"chart chart11\">\n                        <span class=\"char1\">|</span>\n                        <span class=\"char1\">10</span>\n                    </div>\n                    <div className=\"chart chart12\">\n                        <span class=\"char1\">|</span>\n                        <span class=\"char1\">20</span>\n                    </div>\n                    <div className=\"chart chart13\">\n                        <span class=\"char1\">|</span>\n                        <span class=\"char1\">30</span>\n                    </div>\n                    <div className=\"chart chart14\">\n                        <span class=\"char1\">|</span>\n                        <span class=\"char1\">40</span>\n                    </div>\n                    <div className=\"chart chart15\">\n                        <span class=\"char1\">|</span>\n                        <span class=\"char1\">50</span>\n                    </div>\n                    <div className=\"chart chart16\">\n                        <span class=\"char1\">|</span>\n                        <span class=\"char1\">60</span>\n                    </div>\n                    <div className=\"chart chart17\">\n                        <span class=\"char1\">|</span>\n                        <span class=\"char1\">70</span>\n                    </div>\n                    <div className=\"chart chart18\">\n                        <span class=\"char1\">|</span>\n                        <span class=\"char1\">80</span>\n                    </div>\n                    <div className=\"chart chart19\">\n                        <span class=\"char1\">|</span>\n\n                    </div>\n                </div>\n                <div className=\"subprotactor-angular\">\n\n                </div>\n            </div>\n\n        </div>\n    )\n}\n","import React from 'react'\nimport './Form.css'\nexport default function Form(props) {\n    return (\n        <div className=\"container-form\">\n            <div style={{ overflowY:'scroll', paddingBottom:20}}>\n                {Object.values(props.configInputs).map(item => {\n                    if (item.checked) {\n                        return <div className=\"item-form\">\n                            <h6>{item.label}</h6>\n                            <input name={item.name} value={item.data} onChange={(e) => props.handleInputs(e.target.name, e.target.value)} type=\"number\" />\n                        </div>\n                    }\n                    return <></>\n                })}\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { FormGroup, FormControlLabel, Checkbox, FormLabel } from '@material-ui/core'\nimport './Checks.css'\nexport default function Checks(props) {\n    return (\n        <div style={{ width: '100%', height: '100%', display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n            <div className=\"container-check\" style={{ marginTop: '2.33em' }}>\n                <FormLabel component=\"legend\">Campos de entrada</FormLabel>\n            </div>\n            <div className=\"container-check\">\n                {props.type=='simple'?\n                <FormGroup>\n                    <FormControlLabel\n                        control={<Checkbox color=\"secondary\" checked={props.configInputs.length.checked} onChange={(e) => { props.handleChecks(e.target.name, e.target.checked) }} name=\"length\" />}\n                        label={<span className=\"check-title\">Longitud de la cuerda</span>}\n                    />\n                    <FormControlLabel\n                        control={<Checkbox color=\"secondary\" checked={props.configInputs.gravity.checked} onChange={(e) => { props.handleChecks(e.target.name, e.target.checked) }} name=\"gravity\" />}\n                        label={<span className=\"check-title\">Gravedad</span>}\n                    />\n                    <FormControlLabel\n                        control={<Checkbox color=\"secondary\" checked={props.configInputs.posInitial.checked} onChange={(e) => { props.handleChecks(e.target.name, e.target.checked) }} name=\"posInitial\" />}\n                        label={<span className=\"check-title\">Posición inicial</span>}\n                    />\n                    <FormControlLabel\n                        control={<Checkbox color=\"secondary\" checked={props.configInputs.mass.checked} onChange={(e) => { props.handleChecks(e.target.name, e.target.checked) }} name=\"mass\" />}\n                        label={<span className=\"check-title\">Masa</span>}\n                    />\n                </FormGroup>\n                :props.type=='amortiguado'?\n                <FormGroup>\n                    <FormControlLabel\n                        control={<Checkbox color=\"secondary\" checked={props.configInputs.length.checked} onChange={(e) => { props.handleChecks(e.target.name, e.target.checked) }} name=\"length\" />}\n                        label={<span className=\"check-title\">Longitud de la cuerda</span>}\n                    />\n                    <FormControlLabel\n                        control={<Checkbox color=\"secondary\" checked={props.configInputs.gravity.checked} onChange={(e) => { props.handleChecks(e.target.name, e.target.checked) }} name=\"gravity\" />}\n                        label={<span className=\"check-title\">Gravedad</span>}\n                    />\n                    <FormControlLabel\n                        control={<Checkbox color=\"secondary\" checked={props.configInputs.posInitial.checked} onChange={(e) => { props.handleChecks(e.target.name, e.target.checked) }} name=\"posInitial\" />}\n                        label={<span className=\"check-title\">Posición inicial</span>}\n                    />\n                    <FormControlLabel\n                        control={<Checkbox color=\"secondary\" checked={props.configInputs.mass.checked} onChange={(e) => { props.handleChecks(e.target.name, e.target.checked) }} name=\"mass\" />}\n                        label={<span className=\"check-title\">Masa</span>}\n                    />\n                    <FormControlLabel\n                        control={<Checkbox color=\"secondary\" checked={props.configInputs.const.checked} onChange={(e) => { props.handleChecks(e.target.name, e.target.checked) }} name=\"mass\" />}\n                        label={<span className=\"check-title\">Constante de amortiguamiento</span>}\n                    />\n                </FormGroup>\n                :<></>}\n            </div>\n            <div>\n                <select onChange={(e)=>props.handleType(e.target.value)} value={props.type}>\n                    <option value=\"simple\"> Simple</option>\n                    <option value=\"amortiguado\"> Amortiguado</option>\n                    <option value=\"forzado\"> Forzado</option>\n                </select>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport MathJax from 'react-mathjax2'\n\nimport '../Blackboard.css'\nimport functionPlot, { } from \"function-plot\";\n\nlet contentsBounds = document.body.getBoundingClientRect();\nlet width = 800;\nlet height = 200;\n\nlet width1 = 800;\nlet height1 = 200;\n\nlet ratio = contentsBounds.width / width;\n// ondaIncidenteEY: parEMax* Math.cos((k*x)+parOmmega*t) campo electrito\n// ondaIncidenteBZ: parBmax* Math.cos((k*x)+parOmmega*t) campo magnetico\n\n// ondaReflejadaEY: parEMax* Math.cos((k*x)-parOmmega*t) campo electrito\n// ondaReflejadaBZ: parBmax* Math.cos((k*x)-parOmmega*t) campo magnetico\n\n// ondaEstacionariaEY: -2*parE2Max*sen(kx)*sen(parOmmega*t) campo electrico\n// ondaEstacionariaBZ: -2*parBmax*cos(kx)*cos(parOmmega*t) campo magnetico\nexport default function Index(props) {\n\n    React.useEffect(() => {\n        try {\n            functionPlot({\n                target: \"#graph\",\n                width,\n                height,\n                xAxis: { domain: [-10, 10] },\n                grid: false,\n                data: [\n                    {\n                        fn: `(-2*${props.inputs.emax.data})*sin(${props.response.k ? props.response.k : 0}*x)*sin(${props.inputs.ommega.data})`,\n                        color: 'red'\n                    }\n                ],\n                disableZoom: false\n            });\n\n\n            functionPlot({\n                target: \"#graph2\",\n                width,\n                height,\n                xAxis: { domain: [-10, 10] },\n                grid: false,\n                data: [\n                    {\n                        fn: `(-2*${props.inputs.emax.data})*sin(${props.response.k ? props.response.k : 0}*x)*sin(${props.inputs.ommega.data})`,\n                        color: 'blue'\n                    }\n                ],\n                disableZoom: false\n            });\n\n            functionPlot({\n                target: \"#graph3\",\n                width1,\n                height1,\n                xAxis: { domain: [-10, 10] },\n                grid: true,\n                data: [\n                    {\n                        fn: `${props.inputs.emax.data}*cos((${props.response.k ? props.response.k : 0}*x)-${props.inputs.ommega.data})`,\n                        color: 'red',\n\n                    },\n                    {\n                        fn: `${props.inputs.emax.data}*cos((${props.response.k_2 ? props.response.k_2 : 0}*x)-${props.inputs.ommega.data})`,\n                        color: 'blue'\n                    },\n                    {\n                        fn: `${props.inputs.er.data}*cos((${props.response.k ? props.response.k : 0}*x)+${props.inputs.ommega.data})`,\n                        color: 'green'\n                    }\n                ],\n                disableZoom: false\n            });\n            functionPlot({\n                target: \"#graph4\",\n                width1,\n                height1,\n                xAxis: { domain: [-10, 10] },\n                grid: true,\n                data: [\n                    {\n                        fn: `${props.response.bi}*cos((${props.response.k ? props.response.k : 0}*x)-${props.inputs.ommega.data})`,\n                        color: 'red',\n\n                    },\n                    {\n                        fn: `${props.response.bt}*cos((${props.response.k_2 ? props.response.k_2 : 0}*x)-${props.inputs.ommega.data})`,\n                        color: 'blue'\n                    },\n                    {\n                        fn: `${props.response.br}*cos((${props.response.k ? props.response.k : 0}*x)+${props.inputs.ommega.data})`,\n                        color: 'green'\n                    }\n                ],\n                disableZoom: false\n            });\n\n\n        } catch (error) {\n            console.log(error)\n        }\n\n    }, [props.response])\n    return (\n        <div style={{\n            width: '100%', height: '100%', overflowY: 'auto',\n        }}>\n            <div className=\"container-solution\" >\n                <div style={{ paddingBottom: 20, display: 'flex' }}>\n                    <div className=\"left-solution\">\n                        <div className=\"title\">\n                            <h4>Onda incidente:</h4>\n                        </div>\n                        <div className=\"ecuation\">\n                            <MathJax.Context input='ascii'>\n                                <div>\n                                    <MathJax.Node >{`Ey= Emax * Cos(k*x - w*t))`}</MathJax.Node>\n                                </div>\n                            </MathJax.Context>\n                            <MathJax.Context input='ascii'>\n                                <div>\n                                    <MathJax.Node >{`Ey= ${props.inputs.emax.data} * Cos(${props.response.k}*c*x - w*t))`}</MathJax.Node>\n                                </div>\n                            </MathJax.Context>\n                            <MathJax.Context input='ascii'>\n                                <div>\n                                    <MathJax.Node >{`Bz= Bmax * Cos((k*x)-w*t)`}</MathJax.Node>\n                                </div>\n                            </MathJax.Context>\n                            <MathJax.Context input='ascii'>\n                                <div>\n                                    <MathJax.Node >{`Bz= ${props.response.bi} * Cos((${props.response.k}*c*x)-w*t)`}</MathJax.Node>\n                                </div>\n                            </MathJax.Context>\n                        </div>\n                        <div className=\"title\">\n                            <h4>Onda Reflejada</h4>\n                        </div>\n                        <div className=\"ecuation\">\n                            <MathJax.Context input='ascii'>\n                                <div>\n                                    <MathJax.Node >{`Ey= Emax * Cos(k*x +w*t))`}</MathJax.Node>\n                                </div>\n                            </MathJax.Context>\n                            <MathJax.Context input='ascii'>\n                                <div>\n                                    <MathJax.Node >{`Ey= ${props.inputs.emax.data} * Cos(${props.response.k}*c*x + w*t))`}</MathJax.Node>\n                                </div>\n                            </MathJax.Context>\n                            <MathJax.Context input='ascii'>\n                                <div>\n                                    <MathJax.Node >{`Bz= -Bmax * Cos((k*x)+w*t)`}</MathJax.Node>\n                                </div>\n                            </MathJax.Context>\n                            <MathJax.Context input='ascii'>\n                                <div>\n                                    <MathJax.Node >{`Bz= -${props.response.br} * Cos((${props.response.k}*c*x)+w*t)`}</MathJax.Node>\n                                </div>\n                            </MathJax.Context>\n                        </div>\n\n                        <div className=\"title\">\n                            <h4>Onda Transmitida</h4>\n                        </div>\n                        <div className=\"ecuation\">\n                            <MathJax.Context input='ascii'>\n                                <div>\n                                    <MathJax.Node >{`Ey= Emax * Cos(k_2*x - w*t))`}</MathJax.Node>\n                                </div>\n                            </MathJax.Context>\n                            <MathJax.Context input='ascii'>\n                                <div>\n                                    <MathJax.Node >{`Ey= ${props.inputs.emax.data} * Cos(${props.response.k_2}*x - w*t))`}</MathJax.Node>\n                                </div>\n                            </MathJax.Context>\n                            <MathJax.Context input='ascii'>\n                                <div>\n                                    <MathJax.Node >{`Bz= Bmax * Cos((k_2*x)-w*t)`}</MathJax.Node>\n                                </div>\n                            </MathJax.Context>\n                            <MathJax.Context input='ascii'>\n                                <div>\n                                    <MathJax.Node >{`Bz= ${props.response.bt} * Cos((${props.response.k_2}*c*x)-w*t)`}</MathJax.Node>\n                                </div>\n                            </MathJax.Context>\n                        </div>\n\n                        <div className=\"title\">\n                            <h4>Ondas estacionarias:</h4>\n                        </div>\n                        <div className=\"ecuation\">\n                            <MathJax.Context input='ascii'>\n                                <div>\n                                    <MathJax.Node >{`Ey= -2*Emax*Sen(kx)*Sen(\\Omega*t)`}</MathJax.Node>\n                                </div>\n                            </MathJax.Context>\n                            <MathJax.Context input='ascii'>\n                                <div>\n                                    <MathJax.Node >{`Ey= -2*${props.inputs.emax.data}*Sen(${props.response.k}*c*x)*Sen(\\Omega*t)`}</MathJax.Node>\n                                </div>\n                            </MathJax.Context>\n                            <MathJax.Context input='ascii'>\n                                <div>\n                                    <MathJax.Node >{`Bz= -2*Bmax*Cos(kx)*Cos(\\Omega*t)`}</MathJax.Node>\n                                </div>\n                            </MathJax.Context>\n                            <MathJax.Context input='ascii'>\n                                <div>\n                                    <MathJax.Node >{`Bz= -2*${props.response.bi}*Cos(${props.response.k}*c*x)*Cos(\\Omega*t)`}</MathJax.Node>\n                                </div>\n                            </MathJax.Context>\n                        </div>\n                    </div>\n                    <div className=\"right-solution\">\n                        <div className=\"title\">\n                            <h4>Coeficiente de reflexión</h4>\n                        </div>\n                        <div className=\"ecuation\">\n                            <MathJax.Context input='ascii'>\n                                <div>\n                                    <MathJax.Node >{`R= frac{v2 - v1}{v2 + v1}`}</MathJax.Node>\n                                </div>\n                            </MathJax.Context>\n                            <MathJax.Context input='ascii'>\n                                <div>\n                                    <MathJax.Node >{`R=${props.response.coeficienteR}`}</MathJax.Node>\n                                </div>\n                            </MathJax.Context>\n\n                        </div>\n\n                        <div className=\"title\">\n                            <h4>Coeficiente de transmisión</h4>\n                        </div>\n                        <div className=\"ecuation\">\n                            <MathJax.Context input='ascii'>\n                                <div>\n                                    <MathJax.Node >{`T= frac{2*v2}{v2 + v1}`}</MathJax.Node>\n                                </div>\n                            </MathJax.Context>\n                            <MathJax.Context input='ascii'>\n                                <div>\n                                    <MathJax.Node >{`T=${props.response.coeficienteT}`}</MathJax.Node>\n                                </div>\n                            </MathJax.Context>\n\n                        </div>\n\n                        <div className=\"title\">\n                            <h4>Nodos campo electrico y magnetico</h4>\n                        </div>\n                        <div className=\"ecuation\">\n                            <MathJax.Context input='ascii'>\n                                <div>\n                                    <MathJax.Node >{`x=${props.response.nodosCampoElectrico}`}</MathJax.Node>\n                                </div>\n                            </MathJax.Context>\n                            <MathJax.Context input='ascii'>\n                                <div>\n                                    <MathJax.Node >{`x=${props.response.nodosCampoMagnetico}`}</MathJax.Node>\n                                </div>\n                            </MathJax.Context>\n\n                        </div>\n\n                        <div className=\"title\">\n                            <h4>antiNodos campo electrico y magnetico</h4>\n                        </div>\n                        <div className=\"ecuation\">\n                            <MathJax.Context input='ascii'>\n                                <div>\n                                    <MathJax.Node >{`x=${props.response.antiNodosCampoElectrico}`}</MathJax.Node>\n                                </div>\n                            </MathJax.Context>\n                            <MathJax.Context input='ascii'>\n                                <div>\n                                    <MathJax.Node >{`x=${props.response.antinodosCampoMagnetico}`}</MathJax.Node>\n                                </div>\n                            </MathJax.Context>\n\n                        </div>\n                    </div>\n\n                </div>\n                <h5>Grafica Ondas estacionarias</h5>\n                <div style={{ paddingTop: 120, position: 'relative', display: 'flex', flexDirection: 'column' }}>\n                    <div id=\"graph\">\n                    </div>\n                    <div id=\"graph2\">\n                    </div>\n\n                </div>\n                <div style={{ marginTop: 200 }}>\n                    <h5>Grafica Ondas reflejada e incidente</h5>\n\n                    <div style={{ paddingTop: 20, display: 'flex', flexDirection: 'column' }}>\n                        <div id=\"graph3\">\n                        </div>\n                        <div style={{ display: 'flex' }}>\n                            <div style={{ display: 'flex', flexDirection: 'column' }}>\n                                <div style={{ width: 10, height: 10, backgroundColor: 'red' }}>\n\n                                </div>\n                                <h6>Incidente</h6>\n                            </div>\n                            <div style={{ display: 'flex', flexDirection: 'column', paddingLeft: 10 }}>\n                                <div style={{ width: 10, height: 10, backgroundColor: 'green' }}>\n\n                                </div>\n                                <h6>Reflejada</h6>\n                            </div>\n                            <div style={{ display: 'flex', flexDirection: 'column', paddingLeft: 10 }}>\n                                <div style={{ width: 10, height: 10, backgroundColor: 'blue' }}>\n\n                                </div>\n                                <h6>Transmitida</h6>\n                            </div>\n                        </div>\n                        <div id=\"graph4\">\n                        </div>\n                        <div style={{ display: 'flex' }}>\n                            <div style={{ display: 'flex', flexDirection: 'column' }}>\n                                <div style={{ width: 10, height: 10, backgroundColor: 'red' }}>\n\n                                </div>\n                                <h6>Incidente</h6>\n                            </div>\n                            <div style={{ display: 'flex', flexDirection: 'column', paddingLeft: 10 }}>\n                                <div style={{ width: 10, height: 10, backgroundColor: 'green' }}>\n\n                                </div>\n                                <h6>Reflejada</h6>\n                            </div>\n                            <div style={{ display: 'flex', flexDirection: 'column', paddingLeft: 10 }}>\n                                <div style={{ width: 10, height: 10, backgroundColor: 'blue' }}>\n\n                                </div>\n                                <h6>Transmitida</h6>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    )\n}\n","import React,{useEffect} from 'react'\nimport Simple from './simple/index'\nimport Amortiguado from './amortiguado/index'\nimport Forzado from './forzado/index'\nimport Waves from './waves/index'\n\nimport './Blackboard.css'\nexport default function Blackboard(props) {\n    return (\n        <>\n        {/* {props.type==='simple'?\n            <Simple type={props.type} inputs={props.inputs} response={props.response} energies={props.energies} />\n            :props.type==='amortiguado'?\n            <Amortiguado type={props.type} inputs={props.inputs} response={props.responseAmortiguado}/>\n            :\n            <Forzado type={props.type} inputs={props.inputs} response={props.responseForzado}/>\n        } */}\n        <Waves type={props.type} inputs={props.inputs} response={props.responseWaves}/>\n        </>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport './Platform.css'\nimport SimplePendulumAnimation from './animations/SimplePendulumAnimation'\nimport Form from './inputs/Form'\nimport { ButtonGroup, Button } from '@material-ui/core'\nimport Checks from './checks/Checks'\nimport { MdSettings } from 'react-icons/md'\nimport Blackboard from './blackboard/Blackboard'\nimport { pendulum, energies, amortiguado, forzado, waves } from '../../services/index'\n\nexport default function Platform() {\n    const [page, setPage] = useState('solution')\n    const [pageConfig, setPageConfig] = useState('data')\n    const [type, setType] = useState('simple')\n    const [configInputs, setConfigInputs] = useState({ length: { name: 'length', data: 1, checked: true, label: 'Longitud de la cuerda' }, gravity: { name: 'gravity', data: 9.8, checked: true, label: 'Valor de la gravedad' }, posInitial: { name: 'posInitial', data: 7, checked: true, label: 'Ángulo inicial' }, velInitial: { name: 'velInitial', data: 0, checked: true, label: 'Velocidad inicial' }, mass: { name: 'mass', data: 10, checked: true, label: 'Masa del objeto' } })\n    const [configInputsAmortiguado, setConfigInputsAmortiguado] = useState({ length: { name: 'length', data: 1, checked: true, label: 'Longitud de la cuerda' }, gravity: { name: 'gravity', data: 9.8, checked: true, label: 'Valor de la gravedad' }, posInitial: { name: 'posInitial', data: 7, checked: true, label: 'Ángulo inicial' }, velInitial: { name: 'velInitial', data: 0, checked: true, label: 'Velocidad inicial' }, mass: { name: 'mass', data: 10, checked: true, label: 'Masa del objeto' }, const: { name: 'const', data: 10, checked: true, label: 'Constante de amortiguamiento' } })\n    const [configInputsForzado, setConfigInputsForzado] = useState({ length: { name: 'length', data: 1, checked: true, label: 'Longitud de la cuerda' }, gravity: { name: 'gravity', data: 9.8, checked: true, label: 'Valor de la gravedad' }, posInitial: { name: 'posInitial', data: 7, checked: true, label: 'Ángulo inicial' }, velInitial: { name: 'velInitial', data: 0, checked: true, label: 'Velocidad inicial' }, mass: { name: 'mass', data: 10, checked: true, label: 'Masa del objeto' }, const: { name: 'const', data: 10, checked: true, label: 'Constante de amortiguamiento' }, fuerzaInicial: { name: 'fuerzaInicial', data: 1, checked: true, label: 'Fuerza Inicial' }, frecuenciaFuerza: { name: 'frecuenciaFuerza', data: 1, checked: true, label: 'Frecuencia Fuerza' } })\n    const [configInputsWaves, setConfigInputsWaves] = useState({ emax: { name: 'emax', data: 0, checked: true, label: 'Emax' }, er: { name: 'er', data: 0, checked: true, label: 'Er' }, length: { name: 'length', data: 0, checked: true, label: 'Longitud' },  ommega: { name: 'ommega', data: 0, checked: true, label: 'Ommega' },  n: { name: 'n', data: 0, checked: true, label: 'N' }, n1: { name: 'n1', data: 0, checked: true, label: 'n1' }, n2: { name: 'n2', data: 0, checked: true, label: 'n2' }  })\n\n    const [response, setResponse] = useState({})\n    const [responseAmortiguado, setResponseAmortiguado] = useState({})\n    const [responseForzado, setResponseForzado] = useState({})\n    const [responseEnergies, setResponseEnergies] = useState({})\n    const [responseWaves, setResponseWaves] = useState({})\n    const handleChecks = (name, value) => {\n        switch (type) {\n            case 'simple':\n                setConfigInputs({ ...configInputs, [name]: { ...configInputs[name], checked: value } })\n                break;\n            case 'amortiguado':\n                setConfigInputsAmortiguado({ ...configInputsAmortiguado, [name]: { ...configInputsAmortiguado[name], checked: value } })\n                break;\n            case 'forzado':\n                setConfigInputsForzado({ ...configInputsForzado, [name]: { ...configInputsForzado[name], checked: value } })\n                break;\n            default:\n                break;\n        }\n\n    }\n    const handleInputs = (name, value) => {\n        setConfigInputsWaves({ ...configInputsWaves, [name]: { ...configInputsWaves[name], data: value } })\n    }\n    const handleType = (name) => {\n\n        setType(name)\n    }\n    useEffect(() => {\n        setResponseWaves(waves(configInputsWaves.ommega.data, configInputsWaves.n.data, configInputsWaves.n1.data, configInputsWaves.n2.data,configInputsWaves.emax.data ,configInputsWaves.er.data, configInputsWaves.length.data))\n\n    }, [configInputsWaves])\n\n\n    return (\n        <div className=\"page-platform\">\n            <div className=\"platform-header\">\n                <div className=\"platform-tools\">\n                </div>\n                <div className=\"platform-draw\">\n                    <div className=\"button-group\">\n                        <ButtonGroup size='small' color='primary'>\n                            <Button variant={page === 'solution' ? 'contained' : null} onClick={() => setPage('solution')}>Solution</Button>\n                            <Button variant={page === 'graph' ? 'contained' : null} onClick={() => setPage('graph')}>Graphic</Button>\n                        </ButtonGroup>\n                    </div>\n                </div>\n                <div className=\"platform-inputs\">\n                </div>\n            </div>\n            <div className=\"platform-canvas\">\n                <div className=\"platform-tools\">\n                </div>\n                <div className=\"platform-draw\">\n                    {page === 'solution' ? <Blackboard type={type} inputs={configInputsWaves} response={response} responseAmortiguado={responseAmortiguado} responseForzado={responseForzado} responseWaves={responseWaves} energies={responseEnergies} /> :\n                        <SimplePendulumAnimation mass={configInputs.mass.checked ? configInputs.mass.data + 'kg' : ''} angle={Math.abs(configInputs.posInitial.data)} length={configInputs.length.data} time={response.hasOwnProperty('periodo') ? response.periodo / 2 : 0} />\n                    }\n                </div>\n                <div className=\"platform-inputs\">\n                    <ButtonGroup size='small' color='primary'>\n                        <Button variant={pageConfig === 'data' ? 'contained' : null} onClick={() => setPageConfig('data')}>Data</Button>\n                        <Button variant={pageConfig === 'configuration' ? 'contained' : null} onClick={() => setPageConfig('configuration')}><MdSettings /></Button>\n                    </ButtonGroup>\n                    {pageConfig === 'data' ? <Form configInputs={configInputsWaves} handleInputs={handleInputs} /> :\n                        <Checks handleType={handleType} type={type} configInputs={type === 'simple' ? configInputs : type === 'amortiguado' ? configInputsAmortiguado : configInputsForzado} handleChecks={handleChecks} />\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}\n","export function pendulum(prmLongCuerda, prmGravedad, prmPosIni, prmVelIni) {\n    let varPhi;\n    let varTheta0\n    const varW = Math.sqrt(prmGravedad / prmLongCuerda);\n    const varT = 2 * Math.PI * Math.sqrt(prmLongCuerda / prmGravedad);\n    const varF = varW / (2 * Math.PI);\n    let varPhi1\n    let funcAmplitud\n\n    if (prmPosIni >= 0 && prmVelIni >= 0) {\n\n        if (prmPosIni > 0 && prmVelIni > 0) {\n\n            varPhi1 = Math.abs(Math.atan(prmVelIni / (prmPosIni * varW)))\n            varPhi = 2 * Math.PI - varPhi1; //4\n            varTheta0 = Math.abs(prmPosIni / Math.cos(varPhi))\n            funcAmplitud = 'cos'\n        }\n        if (prmPosIni == 0) {\n\n            varPhi1 = Math.PI / 2\n            varPhi = 2 * Math.PI - varPhi1; //4\n            varTheta0 = Math.abs(prmVelIni / (varW * Math.sin(varPhi)))\n            funcAmplitud = 'sen'\n        }\n        if (prmVelIni == 0) {\n\n            varPhi = 0\n            varTheta0 = prmPosIni\n            funcAmplitud = 'cos'\n        }\n    }\n    if (prmPosIni < 0 && prmVelIni >= 0) {\n\n        if (prmVelIni == 0) {\n            varPhi = 0\n            varTheta0 = Math.abs(prmPosIni)\n            funcAmplitud = 'cos'\n        }\n        else {\n            varPhi1 = Math.abs(Math.atan(prmVelIni / (-varW * prmPosIni)));\n            varPhi = Math.PI + varPhi1; //3\n            varTheta0 = Math.abs(prmPosIni / (Math.cos(varPhi)))\n            funcAmplitud = 'cos'\n        }\n\n    }\n    if (prmPosIni < 0 && prmVelIni < 0) {\n        varPhi1 = Math.abs(Math.atan(-(prmVelIni / (prmPosIni * varW))))\n        varPhi = Math.PI - varPhi1;//2\n        varTheta0 = Math.abs(prmPosIni / (Math.cos(varPhi)))\n        funcAmplitud = 'cos'\n    }\n    if (prmPosIni >= 0 && prmVelIni < 0) {\n\n        if (prmPosIni == 0) {\n            varPhi = Math.PI / 2;//1\n            varTheta0 = Math.abs(prmVelIni / (varW * Math.sin(varPhi)))\n            funcAmplitud = 'sen'\n\n        }\n        else {\n            varPhi = Math.abs(Math.atan(prmVelIni / (-varW * prmPosIni)))\n            varTheta0 = prmPosIni / Math.cos(varPhi)\n            funcAmplitud = 'cos'\n        }\n    }\n\n\n    return {\n        frecuenciaNatural: varW ? varW.toFixed(2) : varW,//rad/seg\n        periodo: varT ? varT.toFixed(2) : varT,//s\n        frecuencia: varF ? varF.toFixed(2) : varF,//hz\n        desfase: varPhi ? varPhi.toFixed(2) : varPhi,//rad\n        amplitud: varTheta0 ? degrees_to_radians(varTheta0).toFixed(2) : varTheta0,//ang,\n        funcAmplitud: funcAmplitud\n\n    }\n\n}\n\nexport function energies(prmMasa, prmGravedad, prmLongCuerda, prmPosIni, prmVelIni) {\n    let EP = prmMasa * prmGravedad * prmLongCuerda * ((prmPosIni ^ 2) / 2)\n    let EC = 1 / 2 * prmMasa * prmLongCuerda ^ 2 * prmVelIni ^ 2\n    return {\n        ep: EP,\n        ec: EC,\n        et: EP + EC\n    }\n}\n\nexport function amortiguado(prmLongCuerda, prmGravedad, prmPosIni, prmVelIni, prmMasa, prmB) {\n    const gamma = prmB / (2 * prmMasa);\n    const varW = Math.sqrt(prmGravedad / prmLongCuerda);\n    const gamma_2 = Math.pow(gamma, 2)\n    const varW_2 = Math.pow(varW, 2);\n    const varF = varW / (2 * Math.PI);\n    let type\n    let c1, c2, m1, m2, phi, c, phi1, ommega\n    ommega = Math.sqrt(varW_2 - gamma_2)\n    if (varW_2 == gamma_2) {\n        //CRITICAMENTE AMORTIGUADO\n        c1 = prmPosIni;\n        c2 = prmVelIni + (c1 * gamma)\n        type = 'amortiguado'\n    }\n    if (varW_2 < gamma_2) {\n        //SOBREAMORTIGUADO\n        type = 'sobreamortiguado'\n        m1 = -gamma + (Math.sqrt(gamma_2 - varW_2))\n        m2 = -gamma - (Math.sqrt(gamma_2 - varW_2))\n        c2 = (prmVelIni - (prmPosIni * m1)) / (m2 - m1)\n        c1 = prmPosIni - c2\n    }\n    if (varW_2 > gamma_2) {\n        //SUBAMORTIGUADO\n\n        type = 'subamortiguado'\n        if (prmPosIni >= 0 && prmVelIni >= 0) {\n            if (prmPosIni == 0) {\n                phi1 = Math.PI / 2;\n                phi = 2 * Math.PI - phi1;\n                c = Math.abs(prmVelIni / (ommega * Math.sin(phi)))\n            }\n            if (prmVelIni == 0) {\n                phi1 = Math.abs(Math.atan(-gamma / ommega))\n                phi = 2 * Math.PI - phi1;\n                c = Math.abs(prmPosIni / (Math.cos(phi)))\n            }\n            if (prmVelIni > 0 && prmPosIni > 0) {\n                phi1 = Math.abs(Math.atan((prmVelIni / (prmPosIni * -ommega)) + (-gamma / ommega)))\n                phi = 2 * Math.PI - phi1;\n                c = Math.abs(prmPosIni / (Math.cos(phi)))\n            }\n\n        }\n        if (prmVelIni >= 0 && prmPosIni < 0) {\n            if (prmVelIni == 0) {\n\n                phi1 = Math.abs(Math.atan(-gamma / ommega))\n                phi = Math.PI + phi1;\n                c = Math.abs(prmPosIni / (Math.cos(phi)))\n            }\n            else {\n                phi1 = Math.abs(Math.atan((prmVelIni / (prmPosIni * -ommega)) + (-gamma / ommega)))\n                phi = Math.PI + phi1;\n                c = Math.abs(prmPosIni / (Math.cos(phi)));\n            }\n        }\n        if (prmVelIni < 0 && prmPosIni < 0) {\n            phi1 = Math.abs(Math.atan((prmVelIni / (prmPosIni * -ommega)) + (-gamma / ommega)))\n            phi = Math.PI - phi1;\n            c = Math.abs(prmPosIni / (Math.cos(phi)));\n        }\n        if (prmPosIni >= 0 && prmVelIni < 0) {\n            if (prmPosIni == 0) {\n                phi = Math.PI / 2\n                c = Math.abs(prmVelIni / (ommega * Math.sin(phi)));\n            }\n            else {\n                phi = Math.abs(Math.atan((prmVelIni / (prmPosIni * -ommega)) + (-gamma / ommega)))\n                c = Math.abs(prmPosIni / (Math.cos(phi)));\n            }\n        }\n    }\n\n    return {\n        type: type,\n        c1: c1, //constantes arbitrarias\n        c2: c2, //constantes arbitrarias\n        m1: m1,\n        m2: m2,\n        phi: phi,\n        c: c,\n        frecuenciaNatural: varW,\n        frecuencia: varF,\n        gamma: gamma,\n        ommega: ommega\n    }\n}\nexport function forzado(prmLongCuerda, prmGravedad, prmPosIni, prmVelIni, prmMasa, prmB, prmF0, prmWf) {\n    let amplitudMaxima, delta;\n    if (prmB > 0) {\n        const { c1, c2, c, frecuenciaNatural, frecuencia, m1, m2, phi, gamma, type, ommega } = amortiguado(prmLongCuerda, prmGravedad, prmPosIni, prmVelIni, prmMasa, prmB);\n        const denominador = (Math.pow((Math.pow(frecuenciaNatural, 2) - Math.pow(prmWf, 2)), 2)) + (Math.pow(2 * gamma * prmWf), 2)\n        amplitudMaxima = (prmF0 / prmMasa) / (Math.sqrt(denominador));\n        delta = Math.atan((2 * gamma * prmWf) / (Math.pow(frecuenciaNatural, 2) - Math.pow(prmWf, 2)))\n        return {\n            type: type,\n            c1: c1, //constantes arbitrarias\n            c2: c2, //constantes arbitrarias\n            m1: m1,\n            m2: m2,\n            phi: phi,\n            c: c,\n            frecuenciaNatural,\n            frecuencia,\n            ommega,\n            gamma: gamma,\n            amplitudMaxima: amplitudMaxima,\n            delta: delta,\n            label: 'amortiguado'\n\n        }\n    } else {\n        const { frecuenciaNatural, periodo, frecuencia, desfase, amplitud, funcAmplitud } = pendulum(prmLongCuerda, prmGravedad, prmPosIni, prmVelIni)\n        if (prmWf < frecuenciaNatural) {\n            const denominador = Math.pow(frecuenciaNatural, 2) - Math.pow(prmWf, 2)\n            amplitudMaxima = (prmF0 / prmMasa) / (denominador)\n            delta = 0\n        }\n        if (prmWf > frecuenciaNatural) {\n            const denominador = Math.pow(prmWf, 2) - (Math.pow(frecuenciaNatural, 2))\n            amplitudMaxima = (prmF0 / prmMasa) / (denominador)\n            delta = Math.PI\n        }\n\n        return {\n            frecuenciaNatural, periodo, frecuencia, desfase, amplitud, funcAmplitud,\n            amplitudMaxima: amplitudMaxima,\n            delta: delta,\n            label: 'simple'\n        }\n    }\n}\nexport function waves(parOmmega, parN, n1, n2, emax, er, l) {\n    //CALCULAR K\n    console.log(n1)\n    const v1 = 3 / n1 //coeficiente refraccion\n    const v2 = 3 / n2 //coeficiente refraccion\n    const k = parOmmega / v1 //Numero de onda medio 1\n    const k_2 = parOmmega / v2 //Numero de onda medio 2\n\n    const br = er / v1\n    const bi = emax / v1\n    const bt = emax / v2;\n    const coeficienteR = (v2 - v1) / (v2 + v1)\n    const coeficienteT = (2 * v2) / (v2 + v1)\n\n    const longitudDeOnda = (2 * l) / parN //Longitud de onda\n\n    let nodosCampoElectrico = []\n    let antiNodosCampoElectrico = []\n\n    let nodosCampoMagnetico = []\n    let antinodosCampoMagnetico = []\n\n\n    const x_1 = parN * (longitudDeOnda / 2)\n    const x_2 = (2 * parN + 1) * (longitudDeOnda / 4)\n    nodosCampoElectrico.push(x_1)\n    antiNodosCampoElectrico.push(x_2)\n\n\n\n    const x_3 = (2 * parN + 1) * (longitudDeOnda / 4)\n    const x_4 = parN * (longitudDeOnda / 2)\n    nodosCampoMagnetico.push(x_3)\n    antinodosCampoMagnetico.push(x_4)\n\n\n    console.table(nodosCampoElectrico)\n    console.table(nodosCampoMagnetico)\n    console.log('antinodos')\n    console.table(antiNodosCampoElectrico)\n    console.table(antinodosCampoMagnetico)\n\n\n    return {\n        k: k,\n        k_2: k_2,\n        br,\n        bi,\n        bt,\n        coeficienteR,\n        coeficienteT,\n        nodosCampoElectrico: x_1,\n        antiNodosCampoElectrico: x_2,\n        nodosCampoMagnetico:x_3,\n        antinodosCampoMagnetico:x_4\n\n    }\n}\n\nfunction degrees_to_radians(degrees) {\n    var pi = Math.PI;\n    return degrees * (pi / 180);\n}\n\n","import React from 'react';\nimport Header from './components/header/Header'\nimport LandingPage from './pages/landing/Landing'\nimport Platform from './pages/platform/Platform'\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#444E59'\n    },\n    secondary: {\n      main: '#50E3C4'\n    }\n  }\n});\nfunction App() {\n  return (\n\n    <div className=\"App\">\n      <MuiThemeProvider theme={theme}>\n        <Header />\n        <LandingPage />\n        <Platform />\n      </MuiThemeProvider>\n    </div >\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}